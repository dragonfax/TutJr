#include "headers.h"

const byte LEVEL_WIDTH = 27;
const byte LEVEL_HEIGHT = 15;
const byte LEVEL_ROW_WIDTH = 4;

static const byte PROGMEM data[] = { 
  B11111111,B11111111,B11111111,B11100000,
  B10100000,B00000010,B00001010,B10100000,
  B10101011,B10001111,B10001010,B10100000,
  B10101010,B00001000,B10001010,B10100000,
  B10111110,B00001110,B10101010,B10100000,
  B10000000,B00000000,B00101010,B10100000,
  B10111000,B00001110,B11101010,B10100000,
  B10000000,B00000010,B10001010,B10100000,
  B10001011,B10100010,B11101010,B10100000,
  B10001000,B10100010,B10001010,B10100000,
  B11111111,B11111111,B11111010,B10100000,
  B10001000,B10100010,B10001010,B10100000,
  B11111111,B11111111,B11111010,B10100000,
  B10001000,B10100010,B10001010,B10100000,
  B11111111,B11111111,B11111111,B11100000,
};


const byte NUM_MONSTERS = 5;
Monster monsters[] = { Monster(MapPos(13,7)), Monster(MapPos(10, 1)), Monster(MapPos(16, 10)), Monster(MapPos(22,13)), Monster(MapPos(10, 13)) };

Player player = Player(MapPos(1, 1));

SafeSpot safeSpot = SafeSpot(MapPos(1, 1));

const byte NUM_DOORS = 5;
Door level_doors[] = { 
  Door(MapPos(2, 8), VERTICAL),
  Door(MapPos(6, 6), VERTICAL),
  Door(MapPos(12, 8), VERTICAL),
  Door(MapPos(18, 2), VERTICAL),
  Door(MapPos(10, 2), HORIZONTAL)
};


Exit exitSpace = Exit(MapPos(18,8));